# GitHub Action that builds multi architecture image of the
# project and pushes it to DockerHub. Repository can be found
# from:https://hub.docker.com/repository/docker/latemus/bobweb2/general
#
# This action configuration is Based on Dockers own example:
# https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners

name: Build multi-arch image and push to Docker Hub

on:
  push:
    branches: [ main ]

env:
  REGISTRY_IMAGE: latemus/bobweb2

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          # Is set to be build both on linux/amd64 and linux/arm/v7 even though the bot
          # is currently ran only on Raspberry Pi 2 (armv7l). However, this makes it fast to
          # pull same image that is used in production to test the bot in any x86 platform.
          - linux/amd64
          - linux/arm/v7
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get latest commit details
        id: commit_info
        run: |
          # Replace Newlines with an Escape Sequence and write commit message to the env variable
          {
            echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B | sed ':a;N;$!ba;s/\n/\\n/g')"
          } >> $GITHUB_ENV
  
          # Escape author name and email
          echo "COMMIT_AUTHOR_NAME=$(git log -1 --pretty=%an)" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR_EMAIL=$(git log -1 --pretty=%ae)" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        # QEMU required when building any arm based image as GitHubs
        # own runners are running on x86 Intel CPU's.
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        # Enhances docker with Moby BuildKit builder toolkit. Required for
        # using virtualization and Github Cache Api for cacheing build layers if GitHub file system.
        # More info: https://github.com/docker/buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          # Build cache using GitHub Cache API. Can contain maximum of 10 GB of caches per repository (in total).
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Add build arguments for the commit hash and message
          build-args: |
            COMMIT_MESSAGE=${{ env.COMMIT_MESSAGE }}
            COMMIT_AUTHOR_NAME=${{ env.COMMIT_AUTHOR_NAME }}
            COMMIT_AUTHOR_EMAIL=${{ env.COMMIT_AUTHOR_EMAIL }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          name: digests
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
