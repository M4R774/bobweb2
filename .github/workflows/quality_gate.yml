name: Quality gate

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  ShellCheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: ShellCheck
      # You may pin to the exact commit or the version.
      # uses: ludeeus/action-shellcheck@94e0aab03ca135d11a35e5bfc14e6746dc56e7e9
      uses: ludeeus/action-shellcheck@1.1.0
      #with:
        # A space separated list of additional filename to check
        # additional_files: # optional, default is 
        # Paths to ignore when running ShellCheck
        # ignore: # optional, default is 
        # Minimum severity of errors to consider. Options: [error, warning, info, style]
        # severity: # optional, default is 
        # Run shellcheck on _all_ files at once, instead of one at a time
        # check_together: # optional, default is 
        # Directory to be searched for files. Defaults to .
        # scandir: # optional, default is .
        # Set to true to skip using problem-matcher
        # disable_matcher: # optional, default is false
        # Output format (checkstyle, diff, gcc, json, json1, quiet, tty)
        # format: # optional, default is gcc

  tests_and_sonar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test migration script
      run: |
        cd utilities
        coverage run -m unittest
        coverage xml -i
        sed -i 's/\/home\/runner\/work\/bobweb2\/bobweb2\//\/github\/workspace\//g' coverage.xml
    - name: Check for migrations
      run: |
        cd utilities
        python check_for_new_migrations.py
# Disabled because of 80 char line limit
#   - name: pylinter
#     uses: alexanderdamiani/pylinter@v1.4.0
    - name: Run unit tests
      run: |
        cd web
        python3 manage.py migrate
        cd ../bob
        coverage run -m unittest
        coverage xml -i
        echo "This sed will change the filepaths from coverage report to"
        echo "absolute paths so that sonar will find them"
        sed -i 's/\/home\/runner\/work\/bobweb2\/bobweb2\//\/github\/workspace\//g' coverage.xml
        cd ../web
        coverage run manage.py test --noinput
        coverage xml -i
        sed -i 's/\/home\/runner\/work\/bobweb2\/bobweb2\//\/github\/workspace\//g' coverage.xml

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
