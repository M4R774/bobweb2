name: Quality gate

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  ShellCheck:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        
    - name: ShellCheck
      uses: ludeeus/action-shellcheck@1.1.0

    - name: Hadolint Action
      uses: hadolint/hadolint-action@v1.6.0

    - name: action-docker-compose
      uses: sudo-bot/action-docker-compose@latest
      with:
        cli-args: up --build --detach --force-recreate --remove-orphans
    
    - name: check-status
      run: |
        sleep 30
        if [[ $(docker events --filter event=die --since 100s --until 0s) ]]; then
          echo "Found docker die events, looks bad"
          exit 1
        else
          echo "Everything looks good! :-)"
        fi

  tests_and_sonar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade --upgrade-strategy eager -r requirements.txt
    - name: Test migration script
      run: |
        cd utilities
        coverage run -m unittest
        coverage xml -i
        sed -i 's/\/home\/runner\/work\/bobweb2\/bobweb2\//\/github\/workspace\//g' coverage.xml
    - name: Check for migrations
      run: |
        cd utilities
        python check_for_new_migrations.py
# Disabled because of 80 char line limit
#   - name: pylinter
#     uses: alexanderdamiani/pylinter@v1.4.0
    - name: Run unit tests
      run: |
        cd web
        python3 manage.py migrate
        cd ../bob
        coverage run -m unittest
        coverage xml -i
        echo "This sed will change the filepaths from coverage report to"
        echo "absolute paths so that sonar will find them"
        sed -i 's/\/home\/runner\/work\/bobweb2\/bobweb2\//\/github\/workspace\//g' coverage.xml
        cd ../web
        coverage run manage.py test --noinput
        coverage xml -i
        sed -i 's/\/home\/runner\/work\/bobweb2\/bobweb2\//\/github\/workspace\//g' coverage.xml

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
